[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\RODRIG~1\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\RODRIG~1\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (AdoptOpenJDK Java 1.8.0_282)
[debug]       Load.loadUnit: plugins took 75.8683ms
[debug]       Load.loadUnit: defsScala took 0.3927ms
[debug] [Loading] Scanning directory C:\Users\Rodrigo Prates\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Rodrigo Prates\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.9841 ms
[debug]           Load.resolveProject(global-plugins) took 42.6268ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Rodrigo Prates\.sbt\1.0\plugins, plugins: List(<none>))) took 93.0707ms
[debug] [Loading] Done in C:\Users\Rodrigo Prates\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 118.0962ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.312ms
[debug]     Load.loadUnit(file:/C:/Users/Rodrigo%20Prates/.sbt/1.0/plugins/, ...) took 202.5156ms
[debug]   Load.apply: load took 351.5431ms
[debug]   Load.apply: resolveProjects took 4.6089ms
[debug]   Load.apply: finalTransforms took 39.8399ms
[debug]   Load.apply: config.delegates took 6.7219ms
[debug]   Load.apply: Def.make(settings)... took 259.7343ms
[debug]   Load.apply: structureIndex took 67.0619ms
[debug]   Load.apply: mkStreams took 1.0704ms
[info] loading global plugins from C:\Users\Rodrigo Prates\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1773.2691ms
[debug]           Load.loadUnit: plugins took 28.2025ms
[debug]           Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\Rodrigo Prates\Documents\dev\workspace\scala-brownbag-project\project
[debug]             Load.loadUnit: mkEval took 7.0267ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Rodrigo Prates\Documents\dev\workspace\scala-brownbag-project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.3562 ms
[info] loading settings for project scala-brownbag-project-build from plugins.sbt,idea1.sbt ...
[debug]               Load.resolveProject(scala-brownbag-project-build) took 10.4846ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-brownbag-project-build, base: C:\Users\Rodrigo Prates\Documents\dev\workspace\scala-brownbag-project\project, plugins: List(<none>))) took 13.3927ms
[debug] [Loading] Done in C:\Users\Rodrigo Prates\Documents\dev\workspace\scala-brownbag-project\project, returning: (scala-brownbag-project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 168.6948ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.4234ms
[debug]         Load.loadUnit(file:/C:/Users/Rodrigo%20Prates/Documents/dev/workspace/scala-brownbag-project/project/, ...) took 203.6928ms
[debug]       Load.apply: load took 206.1903ms
[debug]       Load.apply: resolveProjects took 0.161ms
[debug]       Load.apply: finalTransforms took 7.6405ms
[debug]       Load.apply: config.delegates took 0.2919ms
[debug]       Load.apply: Def.make(settings)... took 53.3153ms
[debug]       Load.apply: structureIndex took 18.7147ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\Rodrigo Prates\Documents\dev\workspace\scala-brownbag-project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 470.9726ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\Rodrigo Prates\Documents\dev\workspace\scala-brownbag-project
[debug]       Load.loadUnit: mkEval took 0.2644ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Rodrigo Prates\Documents\dev\workspace\scala-brownbag-project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.5916 ms
[info] loading settings for project scala-brownbag-project from build.sbt ...
[debug]         Load.resolveProject(scala-brownbag-project) took 27.558ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala-brownbag-project, base: C:\Users\Rodrigo Prates\Documents\dev\workspace\scala-brownbag-project, plugins: List(<none>))) took 31.2933ms
[debug] [Loading] Done in C:\Users\Rodrigo Prates\Documents\dev\workspace\scala-brownbag-project, returning: (scala-brownbag-project)
[debug]     Load.loadUnit: loadedProjectsRaw took 76.0815ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.0457ms
[debug]   Load.loadUnit(file:/C:/Users/Rodrigo%20Prates/Documents/dev/workspace/scala-brownbag-project/, ...) took 551.7103ms
[debug] Load.apply: load took 553.0092ms
[debug] Load.apply: resolveProjects took 0.0779ms
[debug] Load.apply: finalTransforms took 17.5566ms
[debug] Load.apply: config.delegates took 0.3056ms
[debug] Load.apply: Def.make(settings)... took 42.3317ms
[debug] Load.apply: structureIndex took 21.0547ms
[debug] Load.apply: mkStreams took 0.0034ms
[info] set current project to scala-brownbag-project (in build file:/C:/Users/Rodrigo%20Prates/Documents/dev/workspace/scala-brownbag-project/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * scala-brownbag-project / idePackagePrefix
[warn]   +- C:\Users\Rodrigo Prates\Documents\dev\workspace\scala-brownbag-project\build.sbt:7
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64400 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64400, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scala-brownbag-project (in build file:/C:/Users/Rodrigo%20Prates/Documents/dev/workspace/scala-brownbag-project/)
[debug] > Exec(idea-shell, None, None)
